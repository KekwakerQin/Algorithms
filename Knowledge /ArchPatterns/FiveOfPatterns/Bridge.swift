protocol Renderer {
    func renderCircle(radius: Double)
}

class VectorRenderer: Renderer {
    func renderCircle(radius: Double) {
        print("–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫—Ä—É–≥–∞ —Ä–∞–¥–∏—É—Å–æ–º \(radius) –≤ –≤–µ–∫—Ç–æ—Ä–µ")
    }
}

class RasterRenderer: Renderer {
    func renderCircle(radius: Double) {
        print("–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫—Ä—É–≥–∞ —Ä–∞–¥–∏—É—Å–æ–º \(radius) –≤ —Ä–∞—Å—Ç—Ä–µ")
    }
}

class Circle {
    let radius: Double
    let renderer: Renderer

    init(radius: Double, renderer: Renderer) {
        self.radius = radius
        self.renderer = renderer
    }

    func draw() {
        renderer.renderCircle(radius: radius)
    }
}

let circle = Circle(radius: 5, renderer: RasterRenderer())
circle.draw()

/*
 üëâ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
 –†–∞–∑–¥–µ–ª—è–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –∏ –µ—ë —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã –∏—Ö –º–æ–∂–Ω–æ –±—ã–ª–æ –∏–∑–º–µ–Ω—è—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ.

 –û—Ç Adapter –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —Ç–µ–º, —á—Ç–æ:
     ‚Ä¢    Adapter —Å–æ–µ–¥–∏–Ω—è–µ—Ç —á—É–∂–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã (legacy/3rd-party),
     ‚Ä¢    –∞ Bridge –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —Ç—ã –°–ê–ú –ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—à—å –∏ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é, –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é.

 –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
     ‚Ä¢    –ù—É–∂–Ω–æ –æ—Ç–¥–µ–ª–∏—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–¥–∏–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –û–°).
     ‚Ä¢    –ù—É–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –∏—Ö –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å.
 */

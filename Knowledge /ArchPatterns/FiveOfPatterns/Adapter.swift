protocol OldSystem {
    func oldRequest()
}

class NewSystem {
    func newRequest() {
        print("–†–∞–±–æ—Ç–∞–µ–º —Å –Ω–æ–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º")
    }
}

// –ê–¥–∞–ø—Ç–µ—Ä
class NewToOldAdapter: OldSystem {
    private let newSystem: NewSystem
    init(newSystem: NewSystem) { self.newSystem = newSystem }
    func oldRequest() {
        newSystem.newRequest()
    }
}

/*
 3Ô∏è‚É£ Adapter (–ê–¥–∞–ø—Ç–µ—Ä)

 üëâ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
 –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç.
 –¢–æ –µ—Å—Ç—å —Å–æ–≤–º–µ—â–∞–µ—Ç –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.

 –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
     ‚Ä¢    –ö–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π –∫–ª–∞—Å—Å, –Ω–æ –µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç.
     ‚Ä¢    –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω—é—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É.

 –í–∞–∂–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ:

 Adapter –ø—Ä–æ—Å—Ç–æ ¬´–ø–µ—Ä–µ–≤–æ–¥–∏—Ç¬ª –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –æ–¥–Ω–æ–≥–æ –Ω–∞ –¥—Ä—É–≥–æ–π.
 –ù–µ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ (–∫–∞–∫ Decorator) –∏ –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø–æ–º (–∫–∞–∫ Proxy).
 */

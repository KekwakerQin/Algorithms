protocol Coffee {
    func cost() -> Double
}

class SimpleCoffee: Coffee {
    func cost() -> Double { 5.0 }
}

class MilkDecorator: Coffee {
    private let base: Coffee
    init(base: Coffee) { self.base = base }
    func cost() -> Double { base.cost() + 1.5 }
}

let coffee = MilkDecorator(base: SimpleCoffee())
print(coffee.cost()) // 6.5

/*
 üëâ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
 –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç—É –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ –∫–ª–∞—Å—Å–∞.

 üìå –¢–∞–∫–∂–µ –∏–Ω–æ–≥–¥–∞ –Ω–∞–∑—ã–≤–∞—é—Ç ¬´Smart Proxy¬ª, –Ω–æ –æ—Ç–ª–∏—á–∏–µ: –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –ù–ï —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø–æ–º –∏ –ù–ï —Å–∫—Ä—ã–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç, –∞ –ø—Ä–æ—Å—Ç–æ –î–û–ë–ê–í–õ–Ø–ï–¢ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.

 –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
     ‚Ä¢    –ù—É–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.
     ‚Ä¢    –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ —Ä–∞–Ω—Ç–∞–π–º–µ, —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –æ–¥–Ω–æ –ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–æ–≥–æ.

 –ü—Ä–∏–º–µ—Ä:
     ‚Ä¢    –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è/—Å–∂–∞—Ç–∏—è.
     ‚Ä¢    –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π.
 */
